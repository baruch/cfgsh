#!/bin/sh

# Auther: Paramahansa Werner Polo Vieyra <pwpolo@codefidence.com>
# Based on Linux kernel menuconfig scripts


CONFIG_FILE=test.conf

MYPWD=$PWD

# Some space for temporary files.
TEMPO=$PWD/__mysetup__

if test -d $TEMPO
then
   mkdir $PWD/__mysetup__/tmp
else
   mkdir $PWD/__mysetup__
   mkdir $PWD/__mysetup__/tmp
fi

#TMP=/home/pwpolo/codefidence/FinJan/examples/__mysetup__/tmp
TMP=$PWD/__mysetup__/tmp

# This checks IP address syntax.
# usage: syntax_check ADDRESS #-OF-EXPECTED-SEGMENTS (up to 4)
# example: syntax_check 123.22.43.1 4
# returns: 0=found correct  1=too many fields  2=non numeric field found

if [ ! -d $TMP ]; then
 mkdir -p $TMP
 chmod 700 $TMP
fi
syntax_check_color() {
  RET_CODE=0 
  SCRATCH=$1
  SCRATCH=`echo $SCRATCH | tr "." "/"`
  INDEX=$2
  while [ ! "$INDEX" = "0" ]; do
    # OK, so I'm a LISP-head :^)
    FIELD=`basename $SCRATCH`
    SCRATCH=`dirname $SCRATCH`
    if expr $FIELD + 1 1> /dev/null 2> /dev/null; then
      GOOD=y
    else
      RET_CODE=2; # non-numeric field
    fi
    INDEX=`expr $INDEX - 1`
  done
  if [ ! "$SCRATCH" = "." ]; then
    RET_CODE=1; # too many arguments
  fi
  if [ "$3" = "WARN" -a ! "$RET_CODE" = "0" ]; then
    cat << EOF > $TMP/tempmsg

The address you have entered seems to be non-standard. We were expecting
$2 groups of numbers seperated by dots, like: 127.0.0.1
Are you absolutely sure you want to use the address $1?

EOF
    dialog --title "WARNING" --yesno "`cat $TMP/tempmsg`" 9 72
    if [ $? = 0 ]; then
      RET_CODE = 0;
    fi
    rm -r $TMP/tempmsg
  else
    if [ "$3" = "ECHO" ]; then
      echo $RET_CODE;
    fi
  fi
  return $RET_CODE;
}

if [ ! -d proc -a ! -d bin -a ! -d tmp ]; then # cheap, but it works :^)
 cd /
fi;

#
# A small function to clean the temp-files.
#
clean_tempfiles() {
      rm -rf $MYPWD/__mysetup__
      return $RET_CODE;
}

CONFIG_DHCP=no				# Use CONFIG_DHCP, yes/no.
CONFIG_PS=no				# Use Polisy Server,  yes/no.

#
# defaults:
NETWORK=127.0.0.0
CONFIG_IPADDR=127.0.0.1
CONFIG_NETMASK=255.255.255.0

CONFIG_PS_IPADDR=127.0.0.1

#
#
HOSTNM=`/bin/uname -n`
DOMAIN=
#
############################################################################
#			 Question and answer.
############################################################################
#
cat << EOF > $TMP/tempmsg

Now we will attempt to configure your system and TCP/IP.
This process probably won't work on all possible network
configurations, but should give you a good start.
You will be able to reconfigure your system at any time
by typing:

# menuconfig

EOF

dialog --title "WELLCOME TO THE SETUP UTILIY" --backtitle \
 "SERVER SETUP UTILITY" --msgbox "`cat $TMP/tempmsg`" \
 15 65;
if [ $? -eq 255 ]; then
   clean_tempfiles
   clear
   exit
fi


dialog --title "SETUP IP FOR '$HOSTNM.$DOMAIN'" --backtitle "SERVER SETUP" --menu \
"Now we need to know how your machine connects to the network.  If you \
have an internal network card and an assigned IP address, GATEWAY, \
and DNS, use the 'static IP' choice to enter these values.  If your IP \
address is assigned by a DHCP server (commonly used by cable modem and DSL \
services), select 'DHCP'.What type of network connection \
best describes your machine?" 19 71 2 \
"static IP" "Use a static IP address to configure ethernet" \
"DHCP" "Use a DHCP server to configure ethernet" 2> $TMP/reply

if [ $? = 1 -o $? = 255 ]; then
  rm -f $TMP/reply
  clean_tempfiles
  clear
  exit
fi
REPLY=`cat $TMP/reply`
echo $REPLY

rm -f $TMP/reply

if [ "$REPLY" = "DHCP" ]; then
  CONFIG_DHCP="yes"
else
  CONFIG_DHCP="no"
fi

if [ "$CONFIG_DHCP" = "no" ]; then

 while [ 0 ]; do
  if [ -r $TMP/SeTIP ]; then
   CONFIG_IPADDR=`cat $TMP/SeTIP`
  fi
  cat << EOF > $TMP/tempmsg
Enter your IP address for the local machine. Example:
111.112.113.114
Enter IP address for $HOSTNM (aaa.bbb.ccc.ddd):
EOF
  dialog --title "ENTER IP ADDRESS FOR '$HOSTNM.$DOMAIN'" --backtitle \
  "SERVER SETUP" --inputbox "`cat $TMP/tempmsg`" \
10 68 $CONFIG_IPADDR 2> $TMP/SeTlip
  if [ $? = 1 -o $? = 255 ]; then
   rm -f $TMP/SeTlip $TMP/tempmsg
   clean_tempfiles
   clear
   exit
  fi
  CONFIG_IPADDR="`cat $TMP/SeTlip`"
  rm -f $TMP/SeTlip $TMP/tempmsg
  if [ "$CONFIG_IPADDR" = "" ]; then
   continue;
  fi
  syntax_check_color $CONFIG_IPADDR 4 WARN
  if [ $? = 0 ]; then
   echo $CONFIG_IPADDR > $TMP/SeTIP
   break;
  fi
 done

 while [ 0 ]; do
  if [ -r $TMP/SeTnetmask ]; then
   CONFIG_NETMASK=`cat $TMP/SeTnetmask`
  fi
  cat << EOF > $TMP/tempmsg
Enter your NETMASK. This will generally look something
like this: 255.255.255.0
Enter NETMASK (aaa.bbb.ccc.ddd):
EOF
  dialog --title "ENTER NETMASK FOR LOCAL NETWORK" --backtitle \
   "SERVER SETUP" --inputbox "`cat $TMP/tempmsg`" \
10 65 $CONFIG_NETMASK 2> $TMP/SeTnmask
  if [ $? = 1 -o $? = 255 ]; then
   rm -f $TMP/SeTnmask $TMP/tempmsg
   exit
  fi
  CONFIG_NETMASK="`cat $TMP/SeTnmask`"
  rm -f $TMP/SeTnmask $TMP/tempmsg
  if [ "$CONFIG_NETMASK" = "" ]; then
   continue;
  fi
  syntax_check_color $CONFIG_NETMASK 4 WARN
  if [ $? = 0 ]; then
   echo $CONFIG_NETMASK > $TMP/SeTnetmask
   break;
  fi
 done

# Set broadcast/network addresses automatically:

 BROADCAST=`ipmask $CONFIG_NETMASK $CONFIG_IPADDR | cut -f 1 -d ' '`
 NETWORK=`ipmask $CONFIG_NETMASK $CONFIG_IPADDR | cut -f 2 -d ' '`

 while [ 0 ]; do
  if [ -r $TMP/SeTgateway ]; then
   CONFIG_GATEWAY=`cat $TMP/SeTgateway`
  fi
  cat << EOF > $TMP/tempmsg
Enter the address for the CONFIG_GATEWAY on your network,
such as `echo $CONFIG_IPADDR | cut -f 1-3 -d .`.1

If you don't have a CONFIG_GATEWAY on your network (or if this machine
is the CONFIG_GATEWAY, such as if you'll be using it with a modem link
to the outside network as a router, firewall, or for IP
masquerading for a LAN), just hit ENTER without entering a
CONFIG_GATEWAY IP address.

Enter CONFIG_GATEWAY address (aaa.bbb.ccc.ddd):
EOF
  dialog --title "ENTER CONFIG_GATEWAY ADDRESS" --backtitle \
   "SERVER SETUP"   --inputbox "`cat $TMP/tempmsg`" \
  17 68 $CONFIG_GATEWAY 2> $TMP/SeTgate
  if [ $? = 1 -o $? = 255 ]; then
   rm -f $TMP/SeTgate $TMP/tempmsg
   clean_tempfiles
   clear
   exit
  fi
  CONFIG_GATEWAY="`cat $TMP/SeTgate`"
  rm -f $TMP/SeTgate $TMP/tempmsg
  if [ "$CONFIG_GATEWAY" = "" ]; then
    break;
  fi
  syntax_check_color $CONFIG_GATEWAY 4 WARN
  if [ $? = 0 ]; then
    echo $CONFIG_GATEWAY > $TMP/SeTgateway
    break;
  fi
 done

else
 if [ ! -r bin/telnet ]; then
  cat << EOF > $TMP/tempmsg

You do not seem to have TCP/IP installed, so all I can really set
up for you is your hostname/domainname. This won't mean much 
since you're not on the network, but it will let you have the 
hostname you prefer shown at the login prompt.

EOF
  dialog --title "SKIPPING MOST OF THE CONFIG PROCESS" --backtitle \
  "SERVER SETUP" --infobox "`cat $TMP/tempmsg`" 10 70
 fi
fi

rm -f $TMP/tempmsg


#
############################################################################
#			 Policy question and answer.
############################################################################
#

dialog --title "POLICY SERVER (Y/N)?" --backtitle "SERVER SETUP" --yesno \
"Will you like to become a Policy Server?

Yes - This machine will become a Policy Server
No  - You should enter the IP of your Policy Server" 10 60

sel=$?

if [ $sel -ne 0 ]; then

 while [ 0 ]; do
  if [ -r $TMP/SeTPS ]; then
   CONFIG_PS_IPADDR=`cat $TMP/SeTPS`
  fi

cat << EOF > $TMP/tempmsg
Enter your IP address for the your 'policy server'.
Example:
       10.0.0.138
EOF
  dialog --title "ENTER IP ADDRESS FOR YOUR POLICY SERVER" --backtitle \
  "SERVER SETUP" --inputbox "`cat $TMP/tempmsg`" \
10 68 $CONFIG_PS_IPADDR 2> $TMP/SeTlps
  if [ $? = 1 -o $? = 255 ]; then
   rm -f $TMP/SeTlps $TMP/tempmsg
   exit
  fi
  CONFIG_PS_IPADDR="`cat $TMP/SeTlps`"
  rm -f $TMP/SeTlps $TMP/tempmsg
  if [ "$CONFIG_PS_IPADDR" = "" ]; then
   continue;
  fi
  syntax_check_color $CONFIG_PS_IPADDR 4 WARN
  if [ $? = 0 ]; then
   echo $CONFIG_PS_IPADDR > $TMP/SeTPS
   break;
  fi
 done

else

   echo "" > $TMP/SetPS
  
fi


# Writting the config

if test -f $CONFIG_FILE
then 
   rm -f $CONFIG_FILE
fi

if [ $? -ne 0 ]; then

   echo "ERROR: Can not delete file $CONFIG_FILE"
   exit 1
fi

if [ $CONFIG_DHCP = "no" ];
then
   echo "CONFIG_DHCP = no" > $TMP/$CONFIG_FILE
   if test -f $TMP/SeTIP
   then
      echo "CONFIG_IPADDR = " `cat $TMP/SeTIP` >> $TMP/$CONFIG_FILE
   fi
   if test -f $TMP/SeTnetmask
   then
      echo "CONFIG_NETMASK = " `cat $TMP/SeTnetmask` >> $TMP/$CONFIG_FILE
   fi
   if test -f $TMP/SeTgateway
   then
      echo "CONFIG_GATEWAY = " `cat $TMP/SeTgateway` >> $TMP/$CONFIG_FILE
   fi
else
   echo "CONFIG_DHCP = yes" > $TMP/$CONFIG_FILE
   echo "CONFIG_IPADDR = " >> $TMP/$CONFIG_FILE
   echo "CONFIG_NETMASK = " >> $TMP/$CONFIG_FILE
   echo "CONFIG_GATEWAY = " >> $TMP/$CONFIG_FILE

fi

if [ $sel -ne 0 ]
   then
   echo "CONFIG_PS = no" >> $TMP/$CONFIG_FILE
   if test -f $TMP/SeTPS
   then
      echo "CONFIG_PS_IPADDR = " `cat $TMP/SeTPS` >> $TMP/$CONFIG_FILE
   fi
else
   echo "CONFIG_PS = yes" >> $TMP/$CONFIG_FILE
   echo "CONFIG_PS_IPADDR = " >> $TMP/$CONFIG_FILE
fi


mv $TMP/$CONFIG_FILE $MYPWD

if [ $? -eq 0 ]; then
   clean_tempfiles
   clear
fi

